import os

configfile: "tcga_lihc.config.json"

# Tools
STAR = "STAR"
SAMTOOLS = "samtools"
HTSEQ = ""

# Reference genome files
REF = config["xx_GRCh38_ref_path"]
REF_NAME = config["xx_GRCh38_ref_prefix"]
GTF = config["xx_gtf_path"]
STAR_INDEX = config["xx_star_index_dir"]

# Directories
FQ_DIR = config["tcga_lihc_rnaseq_fastq_dir"] # path to directory with fq files
AL_DIR = config["tcga_lihc_rnaseq_realignment_dir"]

# Getting unique fastq file and sample names
#samples = glob_wildcards(os.path.join(FQ_DIR, "{sample}_rna_seq_1.fastq"))
#SAMPLES = set(samples.sample) # unique sample names
samples = config["tcga_lihc_rnaseq_females"]
#print (samples)

rule all:
	input:
    	#expand(FQ_DIR + "{sample}_rna_seq_1", FQ_DIR=FQ_DIR, sample=config["tcga_lihc_rnaseq_females"]),
    	#expand(FQ_DIR + "{sample}_rna_seq_2", FQ_DIR=FQ_DIR, sample=config["tcga_lihc_rnaseq_females"]),
        #expand(["{FQ_DIR}{sample}_rna_seq_1.fastq", "{FQ_DIR}{sample}_rna_seq_2.fastq"], FQ_DIR=FQ_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"]"),
        #expand("{FQ_DIR}{sample}_rna_seq_1.fastq", FQ_DIR=FQ_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"]),
		#expand("{FQ_DIR}{sample}_rna_seq_2.fastq", FQ_DIR=FQ_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"]),
		expand(AL_DIR + "{sample}_Aligned.sortedByCoord.out.bam", AL_DIR=AL_DIR, sample=config["tcga_lihc_rnaseq_females"]),
		#expand("{sample}_", sample=config["tcga_lihc_rnaseq_paired_end_samples"])
	output:
		#expand(AL_DIR + "{sample}_Aligned.sortedByCoord.out.bam", AL_DIR=AL_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"])
		#expand("{AL_DIR}{sample}_Aligned.sortedByCoord.out.bam", AL_DIR=AL_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"]),
		#expand("{AL_DIR}{sample}_Aligned.sortedByCoord.out.bam.bai", AL_DIR=AL_DIR, sample=config["tcga_lihc_rnaseq_paired_end_samples"])
	params:
		expand("{AL_DIR}{sample}_", AL_DIR=AL_DIR, sample=config["tcga_lihc_rnaseq_females"])


#rule star_index:
#	input:
#		ref=REF,
#		star_index=star_index
#	output:
#	params:
#		threads=24
#	shell:
#		"""
#		"{STAR} --runThreadN {params.threads} --runMode genomeGenerate "
#		"--genomeDir {star_index} --genomeFastaFiles {input.ref} --sjdbGTFfile {gtf}; "
#		"""


rule align_reads:
	input:
		R1= FQ_DIR + "{sample}_rna_seq_1.fastq",
		R2= FQ_DIR + "{sample}_rna_seq_2.fastq",
		star_index=STAR_INDEX,
		gtf=GTF
	output: AL_DIR + "{sample}_Aligned.sortedByCoord.out.bam"
	params:
		threads=24,
		name_prefix=AL_DIR + "{sample}_"
	message: "Mapping {sample} reads to {REF_NAME} with STAR. Threads: {params.threads}"
	shell:
		"""
		{STAR} --runThreadN {params.threads} --runMode alignReads
		--genomeDir {input.star_index} --outFileNamePrefix {params.name_prefix}
		--readFilesIn {input.R1} {input.R2} --outSAMtype BAM SortedByCoordinate
		--sjdbGTFfile {input.gtf}
		"""

rule index_bam:
	input:
		BAM="{AL_DIR}{sample}_Aligned.sortedByCoord.out.bam"
	output: "{AL_DIR}{sample}_Aligned.sortedByCoord.out.bam.bai"
	message: "Indexing BAM with samtools"
	params:
	shell:
		"""
		{SAMTOOLS} index {input.BAM}
		"""
